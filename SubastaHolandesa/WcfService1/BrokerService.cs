//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="FIUSAC", ConfigurationName="BrokerPortType")]
public interface BrokerPortType
{
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/registro", ReplyAction="*")]
    [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    string registro(int id_grupo);
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/registro", ReplyAction="*")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    System.Threading.Tasks.Task<string> registroAsync(int id_grupo);
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/consultar", ReplyAction="*")]
    [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    string consultar(int id_grupo);
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/consultar", ReplyAction="*")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    System.Threading.Tasks.Task<string> consultarAsync(int id_grupo);
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/comprar", ReplyAction="*")]
    [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    string comprar(int id_grupo, int id_producto);
    
    [System.ServiceModel.OperationContractAttribute(Action="FIUSAC/comprar", ReplyAction="*")]
    [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
    System.Threading.Tasks.Task<string> comprarAsync(int id_grupo, int id_producto);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface BrokerPortTypeChannel : BrokerPortType, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class BrokerPortTypeClient : System.ServiceModel.ClientBase<BrokerPortType>, BrokerPortType
{
    
    public BrokerPortTypeClient()
    {
    }
    
    public BrokerPortTypeClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public BrokerPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BrokerPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public BrokerPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string registro(int id_grupo)
    {
        return base.Channel.registro(id_grupo);
    }
    
    public System.Threading.Tasks.Task<string> registroAsync(int id_grupo)
    {
        return base.Channel.registroAsync(id_grupo);
    }
    
    public string consultar(int id_grupo)
    {
        return base.Channel.consultar(id_grupo);
    }
    
    public System.Threading.Tasks.Task<string> consultarAsync(int id_grupo)
    {
        return base.Channel.consultarAsync(id_grupo);
    }
    
    public string comprar(int id_grupo, int id_producto)
    {
        return base.Channel.comprar(id_grupo, id_producto);
    }
    
    public System.Threading.Tasks.Task<string> comprarAsync(int id_grupo, int id_producto)
    {
        return base.Channel.comprarAsync(id_grupo, id_producto);
    }
}
